@page "/"

<h1>KylisApp</h1>



<form>
	<div class="form-group">
		<label for="pasteTextarea">Paste text here to parse data:</label>
		<textarea @bind="pastedText" class="form-control" id="pasteTextarea" rows="3"></textarea>
	</div>

</form>
<button class="btn btn-primary" @onclick="ParseText">Parse</button>

@*<p class="text-left"><pre>@pastedText</pre></p>*@
<p class="text-left">##################################################################################</p>
@if (cropProduction != null && cropStorage != null)
{
	/* kommentoidaan väliaikaisesti
	for (int i = 0; i < splitted.Length; i++)
	{
		<p class="text-left"> <pre>@i:@splitted[i]</pre></p>
	}
	*/
	<p class="text-left"> <pre>Crop Production: @cropProduction</pre></p>
	<p class="text-left"> <pre>Crop Stored: @cropStorage</pre></p>
	<p class="text-left"> <pre>Crop Storage: @cropMaxStorage</pre></p>
}

@code {
	private string pastedText;
	private string[] splitted;
	private string[] itemz = { "asd1", "asd2", "asd3", "asd4" };
	private int cropProduction;
	private int cropStorage;
	private int cropMaxStorage;

	private void ParseText()
	{
		splitted = pastedText.Split(new[] { Environment.NewLine }, StringSplitOptions.None);

		if (splitted != null)
		{
			GetCropProduction(splitted);

		}
	}

	private void GetCropProduction(string[] splitted)
	{
		var parseProd = splitted.FirstOrDefault(x => x.Contains("var resources"));
		var parseProdIndex = Array.IndexOf(splitted, parseProd);
		var prodIndexLine = splitted[parseProdIndex + 1];
		var prodIndexLineIndex = prodIndexLine.IndexOf("l4");
		var prodIndexLineIndexEnd = prodIndexLine.IndexOf("l5");
		var productionPrepare = prodIndexLine.Substring(prodIndexLineIndex + 5, prodIndexLineIndexEnd - prodIndexLineIndex - 7);
		cropProduction = int.Parse(productionPrepare);

		var storIndexLine = splitted[parseProdIndex + 2];
		var storIndexLineIndex = storIndexLine.IndexOf("l4");
		var storIndexLineIndexEnd = storIndexLine.IndexOf("}");
		var storagePrepare = storIndexLine.Substring(storIndexLineIndex + 5, storIndexLineIndexEnd - storIndexLineIndex);
		cropStorage = int.Parse(storagePrepare);

		var mstorIndexLine = splitted[parseProdIndex + 2];
		var mstorIndexLineIndex = mstorIndexLine.IndexOf("l4");
		var mstorIndexLineIndexEnd = mstorIndexLine.IndexOf("}");
		var mstoragePrepare = mstorIndexLine.Substring(mstorIndexLineIndex + 5, mstorIndexLineIndexEnd - mstorIndexLineIndex);
		cropStorage = int.Parse(mstoragePrepare);

	}

}